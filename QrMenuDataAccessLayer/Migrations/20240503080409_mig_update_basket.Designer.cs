// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QrMenuDataAccessLayer.Concrate;

#nullable disable

namespace QrMenuDataAccessLayer.Migrations
{
    [DbContext(typeof(QrMenuContext))]
    [Migration("20240503080409_mig_update_basket")]
    partial class mig_update_basket
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.About", b =>
                {
                    b.Property<int>("aboutID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("aboutID"), 1L, 1);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("aboutID");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Basket", b =>
                {
                    b.Property<int>("basketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("basketID"), 1L, 1);

                    b.Property<int>("MenuTableID")
                        .HasColumnType("int");

                    b.Property<decimal>("count")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("productID")
                        .HasColumnType("int");

                    b.Property<decimal>("totalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("basketID");

                    b.HasIndex("MenuTableID");

                    b.HasIndex("productID");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Booking", b =>
                {
                    b.Property<int>("bookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookingID"), 1L, 1);

                    b.Property<string>("customerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("mailAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("personCount")
                        .HasColumnType("int");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bookingID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Category", b =>
                {
                    b.Property<int>("categoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryID"), 1L, 1);

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("categoryStatus")
                        .HasColumnType("bit");

                    b.HasKey("categoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Contact", b =>
                {
                    b.Property<int>("contactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("contactID"), 1L, 1);

                    b.Property<string>("footerDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mailAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("contactID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Discount", b =>
                {
                    b.Property<int>("discountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("discountID"), 1L, 1);

                    b.Property<string>("amout")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("discountID");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Feature", b =>
                {
                    b.Property<int>("featureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("featureID"), 1L, 1);

                    b.Property<string>("description1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("featureID");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.MenuTable", b =>
                {
                    b.Property<int>("menuTableID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("menuTableID"), 1L, 1);

                    b.Property<string>("tableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("tableStatus")
                        .HasColumnType("bit");

                    b.HasKey("menuTableID");

                    b.ToTable("MenuTables");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.MoneyCase", b =>
                {
                    b.Property<int>("moneyCaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("moneyCaseID"), 1L, 1);

                    b.Property<decimal>("totalAmout")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("moneyCaseID");

                    b.ToTable("MoneyCases");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Order", b =>
                {
                    b.Property<int>("orderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderID"), 1L, 1);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("menuTableID")
                        .HasColumnType("int");

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("tableID")
                        .HasColumnType("int");

                    b.Property<decimal>("totalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("orderID");

                    b.HasIndex("menuTableID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.OrderDetail", b =>
                {
                    b.Property<int>("orderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderDetailID"), 1L, 1);

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<int>("orderID")
                        .HasColumnType("int");

                    b.Property<int>("productID")
                        .HasColumnType("int");

                    b.Property<decimal>("totalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("unitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("orderDetailID");

                    b.HasIndex("orderID");

                    b.HasIndex("productID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Product", b =>
                {
                    b.Property<int>("productID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("productStatus")
                        .HasColumnType("bit");

                    b.HasKey("productID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Slider", b =>
                {
                    b.Property<int>("sliderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sliderID"), 1L, 1);

                    b.Property<string>("description1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sliderID");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.SocialMedia", b =>
                {
                    b.Property<int>("socialMediaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("socialMediaID"), 1L, 1);

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("socialMediaID");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Testimonial", b =>
                {
                    b.Property<int>("testimonialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("testimonialID"), 1L, 1);

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("testimonialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("testimonialID");

                    b.ToTable("Testimonials");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Basket", b =>
                {
                    b.HasOne("QrMenu.EntityLayer.Entities.MenuTable", "MenuTable")
                        .WithMany("Baskets")
                        .HasForeignKey("MenuTableID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QrMenu.EntityLayer.Entities.Product", "Product")
                        .WithMany("Baskets")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuTable");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Order", b =>
                {
                    b.HasOne("QrMenu.EntityLayer.Entities.MenuTable", "MenuTable")
                        .WithMany()
                        .HasForeignKey("menuTableID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuTable");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.OrderDetail", b =>
                {
                    b.HasOne("QrMenu.EntityLayer.Entities.Order", "Order")
                        .WithMany("orderDetails")
                        .HasForeignKey("orderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QrMenu.EntityLayer.Entities.Product", "Product")
                        .WithMany("orderDetails")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Product", b =>
                {
                    b.HasOne("QrMenu.EntityLayer.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.MenuTable", b =>
                {
                    b.Navigation("Baskets");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Order", b =>
                {
                    b.Navigation("orderDetails");
                });

            modelBuilder.Entity("QrMenu.EntityLayer.Entities.Product", b =>
                {
                    b.Navigation("Baskets");

                    b.Navigation("orderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
